

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Fri May 26 10:41:41 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    14   000000                     
    15                           ; Version 2.40
    16                           ; Generated 17/11/2021 GMT
    17                           ; 
    18                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC18F4550 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50   000000                     _TRISAbits	set	3986
    51   000000                     _ADCON2bits	set	4032
    52   000000                     _ADCON1bits	set	4033
    53   000000                     _TRISBbits	set	3987
    54   000000                     _ADRESL	set	4035
    55   000000                     _ADCON0bits	set	4034
    56                           
    57                           ; #config settings
    58                           
    59                           	psect	cinit
    60   007EA6                     __pcinit:
    61                           	callstack 0
    62   007EA6                     start_initialization:
    63                           	callstack 0
    64   007EA6                     __initialization:
    65                           	callstack 0
    66   007EA6                     end_of_initialization:
    67                           	callstack 0
    68   007EA6                     __end_of__initialization:
    69                           	callstack 0
    70   007EA6  0100               	movlb	0
    71   007EA8  EF69  F03F         	goto	_main	;jump to C main() function
    72                           
    73                           	psect	cstackCOMRAM
    74   000001                     __pcstackCOMRAM:
    75                           	callstack 0
    76   000001                     ?___awdiv:
    77                           	callstack 0
    78   000001                     ___awdiv@dividend:
    79                           	callstack 0
    80                           
    81                           ; 2 bytes @ 0x0
    82   000001                     	ds	2
    83   000003                     ___awdiv@divisor:
    84                           	callstack 0
    85                           
    86                           ; 2 bytes @ 0x2
    87   000003                     	ds	2
    88   000005                     ___awdiv@counter:
    89                           	callstack 0
    90                           
    91                           ; 1 bytes @ 0x4
    92   000005                     	ds	1
    93   000006                     ___awdiv@sign:
    94                           	callstack 0
    95                           
    96                           ; 1 bytes @ 0x5
    97   000006                     	ds	1
    98   000007                     ___awdiv@quotient:
    99                           	callstack 0
   100                           
   101                           ; 2 bytes @ 0x6
   102   000007                     	ds	2
   103   000009                     ?___wmul:
   104                           	callstack 0
   105   000009                     ___wmul@multiplier:
   106                           	callstack 0
   107                           
   108                           ; 2 bytes @ 0x8
   109   000009                     	ds	2
   110   00000B                     ___wmul@multiplicand:
   111                           	callstack 0
   112                           
   113                           ; 2 bytes @ 0xA
   114   00000B                     	ds	2
   115   00000D                     ___wmul@product:
   116                           	callstack 0
   117                           
   118                           ; 2 bytes @ 0xC
   119   00000D                     	ds	2
   120   00000F                     
   121                           ; 1 bytes @ 0xE
   122 ;;
   123 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   124 ;;
   125 ;; *************** function _main *****************
   126 ;; Defined at:
   127 ;;		line 11 in file "newmain.c"
   128 ;; Parameters:    Size  Location     Type
   129 ;;		None
   130 ;; Auto vars:     Size  Location     Type
   131 ;;  a               2    0        int 
   132 ;; Return value:  Size  Location     Type
   133 ;;                  1    wreg      void 
   134 ;; Registers used:
   135 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   136 ;; Tracked objects:
   137 ;;		On entry : 0/0
   138 ;;		On exit  : 0/0
   139 ;;		Unchanged: 0/0
   140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   141 ;;      Params:         0       0       0       0       0       0       0       0       0
   142 ;;      Locals:         0       0       0       0       0       0       0       0       0
   143 ;;      Temps:          0       0       0       0       0       0       0       0       0
   144 ;;      Totals:         0       0       0       0       0       0       0       0       0
   145 ;;Total ram usage:        0 bytes
   146 ;; Hardware stack levels required when called: 1
   147 ;; This function calls:
   148 ;;		___awdiv
   149 ;;		___wmul
   150 ;; This function is called by:
   151 ;;		Startup code after reset
   152 ;; This function uses a non-reentrant model
   153 ;;
   154                           
   155                           	psect	text0
   156   007ED2                     __ptext0:
   157                           	callstack 0
   158   007ED2                     _main:
   159                           	callstack 30
   160   007ED2                     
   161                           ;newmain.c: 12:     int a;;newmain.c: 13:     TRISAbits.RA0 =1;
   162   007ED2  8092               	bsf	146,0,c	;volatile
   163                           
   164                           ;newmain.c: 14:     TRISBbits.RB0 = 0;
   165   007ED4  9093               	bcf	147,0,c	;volatile
   166                           
   167                           ;newmain.c: 17:     ADCON1bits.VCFG0 = 0;
   168   007ED6  98C1               	bcf	193,4,c	;volatile
   169                           
   170                           ;newmain.c: 18:     ADCON1bits.VCFG1 = 0;
   171   007ED8  9AC1               	bcf	193,5,c	;volatile
   172   007EDA                     
   173                           ;newmain.c: 19:     ADCON1bits.PCFG = 0x0E;
   174   007EDA  50C1               	movf	193,w,c	;volatile
   175   007EDC  0BF0               	andlw	-16
   176   007EDE  090E               	iorlw	14
   177   007EE0  6EC1               	movwf	193,c	;volatile
   178   007EE2                     
   179                           ;newmain.c: 23:     ADCON2bits.ADFM = 1;
   180   007EE2  8EC0               	bsf	192,7,c	;volatile
   181                           
   182                           ;newmain.c: 24:     ADCON2bits.ACQT = 0b0001;
   183   007EE4  50C0               	movf	192,w,c	;volatile
   184   007EE6  0BC7               	andlw	-57
   185   007EE8  0908               	iorlw	8
   186   007EEA  6EC0               	movwf	192,c	;volatile
   187                           
   188                           ;newmain.c: 25:     ADCON2bits.ADCS = 0b100;
   189   007EEC  50C0               	movf	192,w,c	;volatile
   190   007EEE  0BF8               	andlw	-8
   191   007EF0  0904               	iorlw	4
   192   007EF2  6EC0               	movwf	192,c	;volatile
   193   007EF4                     
   194                           ;newmain.c: 29:     ADCON0bits.ADON = 1;
   195   007EF4  80C2               	bsf	194,0,c	;volatile
   196                           
   197                           ;newmain.c: 30:     ADCON0bits.CHS = 0b0000;
   198   007EF6  0EC3               	movlw	-61
   199   007EF8  16C2               	andwf	194,f,c	;volatile
   200   007EFA                     l821:
   201                           
   202                           ;newmain.c: 35:     {;newmain.c: 38:         ADCON0bits.GODONE = 1;
   203   007EFA  82C2               	bsf	194,1,c	;volatile
   204                           
   205                           ;newmain.c: 39:         while(ADCON0bits.GODONE ==1)
   206   007EFC  EF93  F03F         	goto	l825
   207   007F00                     l823:
   208   007F00  0E04               	movlw	4
   209   007F02  6E04               	movwf	(___awdiv@divisor+1)^0,c
   210   007F04  0E00               	movlw	0
   211   007F06  6E03               	movwf	___awdiv@divisor^0,c
   212   007F08  CFC3 F001          	movff	4035,___awdiv@dividend	;volatile
   213   007F0C  6A02               	clrf	(___awdiv@dividend+1)^0,c
   214   007F0E  EC9E  F03F         	call	___awdiv	;wreg free
   215   007F12  C001  F009         	movff	?___awdiv,___wmul@multiplier
   216   007F16  C002  F00A         	movff	?___awdiv+1,___wmul@multiplier+1
   217   007F1A  0E00               	movlw	0
   218   007F1C  6E0C               	movwf	(___wmul@multiplicand+1)^0,c
   219   007F1E  0E05               	movlw	5
   220   007F20  6E0B               	movwf	___wmul@multiplicand^0,c
   221   007F22  EC56  F03F         	call	___wmul	;wreg free
   222   007F26                     l825:
   223                           
   224                           ;newmain.c: 39:         while(ADCON0bits.GODONE ==1)
   225   007F26  B2C2               	btfsc	194,1,c	;volatile
   226   007F28  EF98  F03F         	goto	u141
   227   007F2C  EF9A  F03F         	goto	u140
   228   007F30                     u141:
   229   007F30  EF80  F03F         	goto	l823
   230   007F34                     u140:
   231   007F34  EF7D  F03F         	goto	l821
   232   007F38  EF00  F000         	goto	start
   233   007F3C                     __end_of_main:
   234                           	callstack 0
   235                           
   236 ;; *************** function ___wmul *****************
   237 ;; Defined at:
   238 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul16.c"
   239 ;; Parameters:    Size  Location     Type
   240 ;;  multiplier      2    8[COMRAM] unsigned int 
   241 ;;  multiplicand    2   10[COMRAM] unsigned int 
   242 ;; Auto vars:     Size  Location     Type
   243 ;;  product         2   12[COMRAM] unsigned int 
   244 ;; Return value:  Size  Location     Type
   245 ;;                  2    8[COMRAM] unsigned int 
   246 ;; Registers used:
   247 ;;		wreg, status,2, status,0, prodl, prodh
   248 ;; Tracked objects:
   249 ;;		On entry : 0/0
   250 ;;		On exit  : 0/0
   251 ;;		Unchanged: 0/0
   252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   253 ;;      Params:         4       0       0       0       0       0       0       0       0
   254 ;;      Locals:         2       0       0       0       0       0       0       0       0
   255 ;;      Temps:          0       0       0       0       0       0       0       0       0
   256 ;;      Totals:         6       0       0       0       0       0       0       0       0
   257 ;;Total ram usage:        6 bytes
   258 ;; Hardware stack levels used: 1
   259 ;; This function calls:
   260 ;;		Nothing
   261 ;; This function is called by:
   262 ;;		_main
   263 ;; This function uses a non-reentrant model
   264 ;;
   265                           
   266                           	psect	text1
   267   007EAC                     __ptext1:
   268                           	callstack 0
   269   007EAC                     ___wmul:
   270                           	callstack 30
   271   007EAC  5009               	movf	___wmul@multiplier^0,w,c
   272   007EAE  020B               	mulwf	___wmul@multiplicand^0,c
   273   007EB0  CFF3 F00D          	movff	prodl,___wmul@product
   274   007EB4  CFF4 F00E          	movff	prodh,___wmul@product+1
   275   007EB8  5009               	movf	___wmul@multiplier^0,w,c
   276   007EBA  020C               	mulwf	(___wmul@multiplicand+1)^0,c
   277   007EBC  50F3               	movf	243,w,c
   278   007EBE  260E               	addwf	(___wmul@product+1)^0,f,c
   279   007EC0  500A               	movf	(___wmul@multiplier+1)^0,w,c
   280   007EC2  020B               	mulwf	___wmul@multiplicand^0,c
   281   007EC4  50F3               	movf	243,w,c
   282   007EC6  260E               	addwf	(___wmul@product+1)^0,f,c
   283   007EC8  C00D  F009         	movff	___wmul@product,?___wmul
   284   007ECC  C00E  F00A         	movff	___wmul@product+1,?___wmul+1
   285   007ED0  0012               	return		;funcret
   286   007ED2                     __end_of___wmul:
   287                           	callstack 0
   288                           
   289 ;; *************** function ___awdiv *****************
   290 ;; Defined at:
   291 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
   292 ;; Parameters:    Size  Location     Type
   293 ;;  dividend        2    0[COMRAM] int 
   294 ;;  divisor         2    2[COMRAM] int 
   295 ;; Auto vars:     Size  Location     Type
   296 ;;  quotient        2    6[COMRAM] int 
   297 ;;  sign            1    5[COMRAM] unsigned char 
   298 ;;  counter         1    4[COMRAM] unsigned char 
   299 ;; Return value:  Size  Location     Type
   300 ;;                  2    0[COMRAM] int 
   301 ;; Registers used:
   302 ;;		wreg, status,2, status,0
   303 ;; Tracked objects:
   304 ;;		On entry : 0/0
   305 ;;		On exit  : 0/0
   306 ;;		Unchanged: 0/0
   307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   308 ;;      Params:         4       0       0       0       0       0       0       0       0
   309 ;;      Locals:         4       0       0       0       0       0       0       0       0
   310 ;;      Temps:          0       0       0       0       0       0       0       0       0
   311 ;;      Totals:         8       0       0       0       0       0       0       0       0
   312 ;;Total ram usage:        8 bytes
   313 ;; Hardware stack levels used: 1
   314 ;; This function calls:
   315 ;;		Nothing
   316 ;; This function is called by:
   317 ;;		_main
   318 ;; This function uses a non-reentrant model
   319 ;;
   320                           
   321                           	psect	text2
   322   007F3C                     __ptext2:
   323                           	callstack 0
   324   007F3C                     ___awdiv:
   325                           	callstack 30
   326   007F3C  0E00               	movlw	0
   327   007F3E  6E06               	movwf	___awdiv@sign^0,c
   328   007F40  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
   329   007F42  EFA7  F03F         	goto	u80
   330   007F46  EFA5  F03F         	goto	u81
   331   007F4A                     u81:
   332   007F4A  EFAD  F03F         	goto	l777
   333   007F4E                     u80:
   334   007F4E  6C03               	negf	___awdiv@divisor^0,c
   335   007F50  1E04               	comf	(___awdiv@divisor+1)^0,f,c
   336   007F52  B0D8               	btfsc	status,0,c
   337   007F54  2A04               	incf	(___awdiv@divisor+1)^0,f,c
   338   007F56  0E01               	movlw	1
   339   007F58  6E06               	movwf	___awdiv@sign^0,c
   340   007F5A                     l777:
   341   007F5A  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
   342   007F5C  EFB4  F03F         	goto	u90
   343   007F60  EFB2  F03F         	goto	u91
   344   007F64                     u91:
   345   007F64  EFBA  F03F         	goto	l783
   346   007F68                     u90:
   347   007F68  6C01               	negf	___awdiv@dividend^0,c
   348   007F6A  1E02               	comf	(___awdiv@dividend+1)^0,f,c
   349   007F6C  B0D8               	btfsc	status,0,c
   350   007F6E  2A02               	incf	(___awdiv@dividend+1)^0,f,c
   351   007F70  0E01               	movlw	1
   352   007F72  1A06               	xorwf	___awdiv@sign^0,f,c
   353   007F74                     l783:
   354   007F74  0E00               	movlw	0
   355   007F76  6E08               	movwf	(___awdiv@quotient+1)^0,c
   356   007F78  0E00               	movlw	0
   357   007F7A  6E07               	movwf	___awdiv@quotient^0,c
   358   007F7C  5003               	movf	___awdiv@divisor^0,w,c
   359   007F7E  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
   360   007F80  B4D8               	btfsc	status,2,c
   361   007F82  EFC5  F03F         	goto	u101
   362   007F86  EFC7  F03F         	goto	u100
   363   007F8A                     u101:
   364   007F8A  EFEF  F03F         	goto	l805
   365   007F8E                     u100:
   366   007F8E  0E01               	movlw	1
   367   007F90  6E05               	movwf	___awdiv@counter^0,c
   368   007F92  EFCF  F03F         	goto	l791
   369   007F96                     l789:
   370   007F96  90D8               	bcf	status,0,c
   371   007F98  3603               	rlcf	___awdiv@divisor^0,f,c
   372   007F9A  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
   373   007F9C  2A05               	incf	___awdiv@counter^0,f,c
   374   007F9E                     l791:
   375   007F9E  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
   376   007FA0  EFD4  F03F         	goto	u111
   377   007FA4  EFD6  F03F         	goto	u110
   378   007FA8                     u111:
   379   007FA8  EFCB  F03F         	goto	l789
   380   007FAC                     u110:
   381   007FAC                     l793:
   382   007FAC  90D8               	bcf	status,0,c
   383   007FAE  3607               	rlcf	___awdiv@quotient^0,f,c
   384   007FB0  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
   385   007FB2  5003               	movf	___awdiv@divisor^0,w,c
   386   007FB4  5C01               	subwf	___awdiv@dividend^0,w,c
   387   007FB6  5004               	movf	(___awdiv@divisor+1)^0,w,c
   388   007FB8  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
   389   007FBA  A0D8               	btfss	status,0,c
   390   007FBC  EFE2  F03F         	goto	u121
   391   007FC0  EFE4  F03F         	goto	u120
   392   007FC4                     u121:
   393   007FC4  EFE9  F03F         	goto	l801
   394   007FC8                     u120:
   395   007FC8  5003               	movf	___awdiv@divisor^0,w,c
   396   007FCA  5E01               	subwf	___awdiv@dividend^0,f,c
   397   007FCC  5004               	movf	(___awdiv@divisor+1)^0,w,c
   398   007FCE  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
   399   007FD0  8007               	bsf	___awdiv@quotient^0,0,c
   400   007FD2                     l801:
   401   007FD2  90D8               	bcf	status,0,c
   402   007FD4  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
   403   007FD6  3203               	rrcf	___awdiv@divisor^0,f,c
   404   007FD8  2E05               	decfsz	___awdiv@counter^0,f,c
   405   007FDA  EFD6  F03F         	goto	l793
   406   007FDE                     l805:
   407   007FDE  5006               	movf	___awdiv@sign^0,w,c
   408   007FE0  B4D8               	btfsc	status,2,c
   409   007FE2  EFF5  F03F         	goto	u131
   410   007FE6  EFF7  F03F         	goto	u130
   411   007FEA                     u131:
   412   007FEA  EFFB  F03F         	goto	l809
   413   007FEE                     u130:
   414   007FEE  6C07               	negf	___awdiv@quotient^0,c
   415   007FF0  1E08               	comf	(___awdiv@quotient+1)^0,f,c
   416   007FF2  B0D8               	btfsc	status,0,c
   417   007FF4  2A08               	incf	(___awdiv@quotient+1)^0,f,c
   418   007FF6                     l809:
   419   007FF6  C007  F001         	movff	___awdiv@quotient,?___awdiv
   420   007FFA  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
   421   007FFE  0012               	return		;funcret
   422   008000                     __end_of___awdiv:
   423                           	callstack 0
   424   000000                     
   425                           	psect	rparam
   426   000000                     
   427                           	psect	idloc
   428                           
   429                           ;Config register IDLOC0 @ 0x200000
   430                           ;	unspecified, using default values
   431   200000                     	org	2097152
   432   200000  FF                 	db	255
   433                           
   434                           ;Config register IDLOC1 @ 0x200001
   435                           ;	unspecified, using default values
   436   200001                     	org	2097153
   437   200001  FF                 	db	255
   438                           
   439                           ;Config register IDLOC2 @ 0x200002
   440                           ;	unspecified, using default values
   441   200002                     	org	2097154
   442   200002  FF                 	db	255
   443                           
   444                           ;Config register IDLOC3 @ 0x200003
   445                           ;	unspecified, using default values
   446   200003                     	org	2097155
   447   200003  FF                 	db	255
   448                           
   449                           ;Config register IDLOC4 @ 0x200004
   450                           ;	unspecified, using default values
   451   200004                     	org	2097156
   452   200004  FF                 	db	255
   453                           
   454                           ;Config register IDLOC5 @ 0x200005
   455                           ;	unspecified, using default values
   456   200005                     	org	2097157
   457   200005  FF                 	db	255
   458                           
   459                           ;Config register IDLOC6 @ 0x200006
   460                           ;	unspecified, using default values
   461   200006                     	org	2097158
   462   200006  FF                 	db	255
   463                           
   464                           ;Config register IDLOC7 @ 0x200007
   465                           ;	unspecified, using default values
   466   200007                     	org	2097159
   467   200007  FF                 	db	255
   468                           
   469                           	psect	config
   470                           
   471                           ;Config register CONFIG1L @ 0x300000
   472                           ;	PLL Prescaler Selection bits
   473                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   474                           ;	System Clock Postscaler Selection bits
   475                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   476                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   477                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   478   300000                     	org	3145728
   479   300000  00                 	db	0
   480                           
   481                           ;Config register CONFIG1H @ 0x300001
   482                           ;	Oscillator Selection bits
   483                           ;	FOSC = INTOSCIO_EC, Internal oscillator, port function on RA6, EC used by USB (INTIO)
   484                           ;	Fail-Safe Clock Monitor Enable bit
   485                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   486                           ;	Internal/External Oscillator Switchover bit
   487                           ;	IESO = OFF, Oscillator Switchover mode disabled
   488   300001                     	org	3145729
   489   300001  08                 	db	8
   490                           
   491                           ;Config register CONFIG2L @ 0x300002
   492                           ;	Power-up Timer Enable bit
   493                           ;	PWRT = OFF, PWRT disabled
   494                           ;	Brown-out Reset Enable bits
   495                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   496                           ;	Brown-out Reset Voltage bits
   497                           ;	BORV = 3, Minimum setting 2.05V
   498                           ;	USB Voltage Regulator Enable bit
   499                           ;	VREGEN = OFF, USB voltage regulator disabled
   500   300002                     	org	3145730
   501   300002  19                 	db	25
   502                           
   503                           ;Config register CONFIG2H @ 0x300003
   504                           ;	Watchdog Timer Enable bit
   505                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   506                           ;	Watchdog Timer Postscale Select bits
   507                           ;	WDTPS = 32768, 1:32768
   508   300003                     	org	3145731
   509   300003  1E                 	db	30
   510                           
   511                           ; Padding undefined space
   512   300004                     	org	3145732
   513   300004  FF                 	db	255
   514                           
   515                           ;Config register CONFIG3H @ 0x300005
   516                           ;	CCP2 MUX bit
   517                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   518                           ;	PORTB A/D Enable bit
   519                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   520                           ;	Low-Power Timer 1 Oscillator Enable bit
   521                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   522                           ;	MCLR Pin Enable bit
   523                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   524   300005                     	org	3145733
   525   300005  81                 	db	129
   526                           
   527                           ;Config register CONFIG4L @ 0x300006
   528                           ;	Stack Full/Underflow Reset Enable bit
   529                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
   530                           ;	Single-Supply ICSP Enable bit
   531                           ;	LVP = ON, Single-Supply ICSP enabled
   532                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   533                           ;	ICPRT = OFF, ICPORT disabled
   534                           ;	Extended Instruction Set Enable bit
   535                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   536                           ;	Background Debugger Enable bit
   537                           ;	DEBUG = 0x1, unprogrammed default
   538   300006                     	org	3145734
   539   300006  84                 	db	132
   540                           
   541                           ; Padding undefined space
   542   300007                     	org	3145735
   543   300007  FF                 	db	255
   544                           
   545                           ;Config register CONFIG5L @ 0x300008
   546                           ;	Code Protection bit
   547                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   548                           ;	Code Protection bit
   549                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   550                           ;	Code Protection bit
   551                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   552                           ;	Code Protection bit
   553                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   554   300008                     	org	3145736
   555   300008  0F                 	db	15
   556                           
   557                           ;Config register CONFIG5H @ 0x300009
   558                           ;	Boot Block Code Protection bit
   559                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   560                           ;	Data EEPROM Code Protection bit
   561                           ;	CPD = OFF, Data EEPROM is not code-protected
   562   300009                     	org	3145737
   563   300009  C0                 	db	192
   564                           
   565                           ;Config register CONFIG6L @ 0x30000A
   566                           ;	Write Protection bit
   567                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   568                           ;	Write Protection bit
   569                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   570                           ;	Write Protection bit
   571                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   572                           ;	Write Protection bit
   573                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   574   30000A                     	org	3145738
   575   30000A  0F                 	db	15
   576                           
   577                           ;Config register CONFIG6H @ 0x30000B
   578                           ;	Configuration Register Write Protection bit
   579                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   580                           ;	Boot Block Write Protection bit
   581                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   582                           ;	Data EEPROM Write Protection bit
   583                           ;	WRTD = OFF, Data EEPROM is not write-protected
   584   30000B                     	org	3145739
   585   30000B  E0                 	db	224
   586                           
   587                           ;Config register CONFIG7L @ 0x30000C
   588                           ;	Table Read Protection bit
   589                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   590                           ;	Table Read Protection bit
   591                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   592                           ;	Table Read Protection bit
   593                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   594                           ;	Table Read Protection bit
   595                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   596   30000C                     	org	3145740
   597   30000C  0F                 	db	15
   598                           
   599                           ;Config register CONFIG7H @ 0x30000D
   600                           ;	Boot Block Table Read Protection bit
   601                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   602   30000D                     	org	3145741
   603   30000D  40                 	db	64
   604                           tosu	equ	0xFFF
   605                           tosh	equ	0xFFE
   606                           tosl	equ	0xFFD
   607                           stkptr	equ	0xFFC
   608                           pclatu	equ	0xFFB
   609                           pclath	equ	0xFFA
   610                           pcl	equ	0xFF9
   611                           tblptru	equ	0xFF8
   612                           tblptrh	equ	0xFF7
   613                           tblptrl	equ	0xFF6
   614                           tablat	equ	0xFF5
   615                           prodh	equ	0xFF4
   616                           prodl	equ	0xFF3
   617                           indf0	equ	0xFEF
   618                           postinc0	equ	0xFEE
   619                           postdec0	equ	0xFED
   620                           preinc0	equ	0xFEC
   621                           plusw0	equ	0xFEB
   622                           fsr0h	equ	0xFEA
   623                           fsr0l	equ	0xFE9
   624                           wreg	equ	0xFE8
   625                           indf1	equ	0xFE7
   626                           postinc1	equ	0xFE6
   627                           postdec1	equ	0xFE5
   628                           preinc1	equ	0xFE4
   629                           plusw1	equ	0xFE3
   630                           fsr1h	equ	0xFE2
   631                           fsr1l	equ	0xFE1
   632                           bsr	equ	0xFE0
   633                           indf2	equ	0xFDF
   634                           postinc2	equ	0xFDE
   635                           postdec2	equ	0xFDD
   636                           preinc2	equ	0xFDC
   637                           plusw2	equ	0xFDB
   638                           fsr2h	equ	0xFDA
   639                           fsr2l	equ	0xFD9
   640                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     14      14
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___wmul
    ___wmul->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     764
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     311
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___wmul
     ___awdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      E       E       1       14.7%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBIGSFRhh         3C      0       0      20        0.0%
BITBIGSFRhl         2C      0       0      21        0.0%
BITBIGSFRl          32      0       0      22        0.0%
ABS                  0      0       0      23        0.0%
BIGRAM             7FF      0       0      24        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Fri May 26 10:41:41 2023

                     l26 7ED0                       u80 7F4E                       u81 7F4A  
                     u90 7F68                       u91 7F64             ___awdiv@sign 0006  
    ___wmul@multiplicand 000B                      l257 7FFE                      l801 7FD2  
                    l803 7FD8                      l805 7FDE                      l821 7EFA  
                    l813 7ED2                      l807 7FEE                      l823 7F00  
                    l815 7EDA                      l809 7FF6                      l825 7F26  
                    l817 7EE2                      l771 7F40                      l763 7EAC  
                    l819 7EF4                      l781 7F70                      l773 7F4E  
                    l765 7EC8                      l791 7F9E                      l783 7F74  
                    l775 7F56                      l793 7FAC                      l785 7F7C  
                    l777 7F5A                      l769 7F3C                      l795 7FB2  
                    l787 7F8E                      l779 7F68                      l797 7FC8  
                    l789 7F96                      l799 7FD0                      u100 7F8E  
                    u101 7F8A                      u110 7FAC                      u111 7FA8  
                    u120 7FC8                      u121 7FC4                      u130 7FEE  
                    u131 7FEA                      u140 7F34                      u141 7F30  
                   _main 7ED2                     prodh 0FF4                     prodl 0FF3  
                   start 0000             ___param_bank 0000                    ?_main 0001  
        __end_of___awdiv 8000          ___awdiv@divisor 0003          ___awdiv@counter 0005  
                  status 0FD8          __initialization 7EA6             __end_of_main 7F3C  
                 ??_main 000F            __activetblptr 0000                   _ADRESL 0FC3  
       ___awdiv@dividend 0001                   ___wmul 7EAC                ??___awdiv 0005  
       ___awdiv@quotient 0007                   isa$std 0001               __accesstop 0060  
__end_of__initialization 7EA6            ___rparam_used 0001           __pcstackCOMRAM 0001  
                ?___wmul 0009                  __Hparam 0000                  __Lparam 0000  
                ___awdiv 7F3C                  __pcinit 7EA6                  __ramtop 0800  
                __ptext0 7ED2                  __ptext1 7EAC                  __ptext2 7F3C  
   end_of_initialization 7EA6                _TRISAbits 0F92                _TRISBbits 0F93  
         __end_of___wmul 7ED2      start_initialization 7EA6                 ??___wmul 000D  
               ?___awdiv 0001           ___wmul@product 000D               _ADCON0bits 0FC2  
             _ADCON1bits 0FC1               _ADCON2bits 0FC0        ___wmul@multiplier 0009  
               __Hrparam 0000                 __Lrparam 0000                 isa$xinst 0000  
